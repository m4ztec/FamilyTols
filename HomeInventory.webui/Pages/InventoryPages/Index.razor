@page "/inventory"
@using Microsoft.AspNetCore.Components.QuickGrid
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using HomeInventory.shared.Models
@inject HttpClient http
@inject NavigationManager Navigation
@attribute [Authorize]

<PageTitle>Index</PageTitle>

<h1>Index</h1>

<h3>@userId</h3>

<p>
    <button @onclick="HIHIHI">Create inventory</button>
</p>

<QuickGrid Class="table" Items="hi">
    <PropertyColumn Property="inventory => inventory.Name" />
    <PropertyColumn Property="inventory => inventory.Description" />
    <PropertyColumn Property="inventory => inventory.Onwer" />
    <PropertyColumn Property="inventory => inventory.CreatedAt" />
    <PropertyColumn Property="inventory => inventory.LastModifiedAt" />

    <TemplateColumn Context="inventory">
        <a href="@($"inventorys/edit?id={inventory.Id}")">Edit</a> |
        <a href="@($"inventorys/details?id={inventory.Id}")">Details</a> |
        <a href="@($"inventorys/delete?id={inventory.Id}")">Delete</a>
    </TemplateColumn>
</QuickGrid>

@code {
    [CascadingParameter]
    private Task<AuthenticationState>? authenticationState { get; set; }
    IQueryable<Inventory>? hi;
    string userId = "";

    protected override async Task OnInitializedAsync()
    {
        if (authenticationState is not null)
        {
            var authState = await authenticationState;
            var user = authState?.User;
            userId = user?.Claims.FirstOrDefault(a => a.Type == "sub")?.Value ?? "";
        }
        var tmp = await http.GetFromJsonAsync<IEnumerable<InventoryMembers>>($"/api/InventoryMembers/users/{userId}") ?? [];
        var tmp2 = await http.PostAsJsonAsync("/api/Inventory/Bulk/get", tmp.Select(a => a.InventoryId).ToArray());
        var tmp3 = await tmp2.Content.ReadFromJsonAsync<IEnumerable<Inventory>>();

        hi = tmp3?.AsQueryable();
    }


    private void HIHIHI()
    {
        Navigation.NavigateTo($"/inventory/create?Onwer={userId}");
    }

    private async Task CreateInventory()
    {
        Inventory tmp = new ()
        {
            Onwer = userId,
            LastModifiedAt = DateTimeOffset.UtcNow,
            
        };
        var hi = await http.PostAsJsonAsync("/api/Inventory/", tmp);
    }
}
